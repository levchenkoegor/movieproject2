function run_pRF_V7(SubID,nRuns,WhichFolder,ScreenHeight,ViewingDistance,prefix)
% Using SPM12 & SAMSRF V7.13 - script run_PRF.m

% batches PRF analyses across subjects using SPM batched preprocessing, freesurfer's reconall and samsrf
%
% this script expects a folder with functional and structural subject data
% path --  session name	-- functional folder 1 -- scan1.nii
%						-- functional folder 2 -- scan2.nii
%						-- functional folder N -- scanN.nii
%						-- MPRAGE
%						-- ALIGN MPRAGE
%
% A freesurfer subject dir created by running recon-all on the MPRAGE, with
% a manually added folder prf, which should contain the following
%
% FreesurferSubjectDir -- subject name  -- prf 	-- lh.occ.label
%                                               -- rh.occ.label
%												-- aps-subjectname.mat
%
%
% Created    : "2015-03-16 14:42:38 TDekker"

if nargin < 1
    SubID = input('Enter Subject ID: ','s');
    nRuns = '3';
    WhichFolder = 'pRF_NonEq';
    ScreenHeight = '27';
    ViewingDistance = '34';
    prefix = 'pRF_NonEq';
end

%% Path definition
% Set FSL and Freesurfer environment for Matlab
commandwindow;
if ismac()
    [~,result] = system('uname -m');
    is_silicon_mac = strcmp(strtrim(result),'arm64');
else
    is_silicon_mac = false;
end
if is_silicon_mac
    rmpath(genpath('/Applications/freesurfer/7.4.1'))
else
    rmpath(genpath('/Applications/freesurfer/7.1.1'))
end
setenv('FSLDIR','/Applications/fsl');  % Set environment for FSL folder

% p.Home = '/Users/hugochowwingbom/CVL Dropbox/Hugo Chow-Wing-Bom/LHON_ION/Projects/Project1_CSF_pRFMapping';
p.Home = '/Users/hugocwb/CVL Dropbox/Hugo Chow-Wing-Bom/LHON_ION/Projects/Project1_CSF_pRFMapping';
cd(p.Home)
disp(['Home path: ' p.Home])
p.FS_subDIR=[p.Home filesep 'subjects'];
disp(['subjects (recon-all) path: ' p.FS_subDIR])
p.scriptpath = [p.Home filesep '_AnalysisScripts/3b_fMRI_pRF/PreProcessing'];
disp(['Script path: ' p.scriptpath])
addpath(genpath(p.scriptpath))

%% Initialise variable settings
% Set participant ID to analyse
disp(' ')
p.sessNames = char(SubID);
p.subNames = char(SubID);
disp(p.sessNames)
disp(p.subNames)

nRuns = str2double(nRuns);
% Select conditions
% NonEq: non-equated pRF stimulus, i.e., B&W checkerboard
disp(['Number of runs: ' num2str(nRuns)])
for i = 1:nRuns
    p.scanNames{i} = [char(prefix) num2str(i)];  % Name of the fMRI runs/conditions
    p.ppscanNames{i} = ['pp_' char(prefix) num2str(i)]; % Name of the preprocessed fMRI runs
end
p.dumscans = {'*0000*' '*0001*' '*0002*' '*0003*'}; % Corresponds to the 4 trigger scans
p.batchFuntion = 'batch_job(b)';  % the batch_job.m generated by SPM batch tool, with individual file name replaced by variables in structure b

% Set scan parameters
s = struct();
s.nVols = 348; % Number of volumes acquired (pRF = 348 volumes - w/o dumscans)
s.condition = [1 1]; % Defines index for your conditions [should match the size of p.scanNames]
s.reps = [1 2]; % Index of the run number for a condition [rep number 1 and rep number 2]
s.ScreenWidth = str2double(ScreenHeight); % Height of the MRI screen in cm (BOLD = 32.4cm)
s.totdist = str2double(ViewingDistance); % Viewing distance in cm (BOLD = 107cm)
s.TR = 1; % in seconds
disp(['Summary scanning parameters: Volumes = ' num2str(s.nVols) '; TR = ' num2str(s.TR) 's; height = ' num2str(s.ScreenWidth) 'cm; VD = ' num2str(s.totdist) 'cm'])

%% Create occipital labels using SamSrf (MakeOccRoi ->  ?h.occ.label)
pRFFolder = char(fullfile(p.FS_subDIR,p.subNames,WhichFolder));

if ~any(size(dir(char(fullfile(p.FS_subDIR,p.subNames,WhichFolder,'*occ*'))),1))
    cd(pRFFolder)

    MeshFolder = char(fullfile(p.FS_subDIR,p.subNames,'surf'));
    disp(MeshFolder)
    Y = -35; % defines the border of the ROI in anterior-posterior coordinates (default = -35).
    MakeOccRoi(MeshFolder,Y) % Edited for FS 7.4.1.
    cd(p.FS_subDIR)
    disp('Occipital labels created')
else
    disp('Occipital labels already created')
end

% The created labels can be checked in freeview by:
% 1) Load the inflated surface for each hemisphere (surf/lh.inflated & surf/rh.inflated)
% 2) In the freeview left toolbar:
% - select the hemisphere that you want to look at
% - set Curvature to off
% - Under label, select load and choose your ?h.occ.label file

%% Load aperture file
disp('Loading aps_*.mat file')
d = dir(char(fullfile(p.FS_subDIR,p.subNames,WhichFolder,'aps*')));
apsFile = char(fullfile(p.FS_subDIR,p.subNames,WhichFolder,d.name));
load(apsFile)

%% Loop through subjects
disp('Starting the analysis ...')
disp(p.subNames)
cd(pRFFolder)

disp('...Fit pRF...')
% In this part, an aps_*.mat file will be loaded
% This file is obtained by saving the ApFrm matrix that contains
% images of the displayed stimulus for each mri volume
% To create aps_*.mat, use ApName = CreateApertures (SamSrf v7)
% !!! Make sure that the ApFrm that you are using was recorded w/o spider_web !!!
Hemis = {'lh','rh'};

for hem = 1:length(Hemis)
    [p,s] = fit_prf_V7(p,s,ApFrm,apsFile,Hemis{hem},WhichFolder);
end

disp('%%%%%%% ALL DONE !!! %%%%%%%')
end
